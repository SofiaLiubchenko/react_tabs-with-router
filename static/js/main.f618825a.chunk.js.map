{"version":3,"sources":["App.tsx","Components/Home.tsx","Components/Tabs.tsx","Components/NotFoundPage.tsx","Components/NotFoundRedirect.ts","Components/HomePageRedirect.ts","AppRouting.tsx","index.tsx"],"names":["App","className","to","isActive","classNames","Home","Tabs","tabs","id","title","content","useParams","tabId","useState","selectedTab","setSelectedTab","useEffect","selected","find","tab","map","NotFoundPage","NotFoundRedirect","navigate","useNavigate","HomePageRedirect","router","createHashRouter","path","element","errorElement","children","AppRouting","ReactDOM","render","document","getElementById"],"mappings":"kPAMaA,EAAM,kBACjB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,kBAQA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,yBAYN,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCpCKI,EAAO,WAClB,OACE,oBAAIJ,UAAU,QAAd,wB,cCGSK,EAAO,WAClB,IAAMC,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG1C,EAAsBC,cAAdC,aAAR,MAAgB,EAAhB,EACA,EAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,qBAAU,WACR,IAAMC,EAAWV,EAAKW,MAAK,SAAAC,GAAG,OAAIA,EAAIX,KAAOI,KAE7CG,EAAeE,GAAY,QAC1B,CAACL,IAGF,qCACE,oBAAIX,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGM,EAAKa,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MACRlB,UAAWG,IAAW,CAAE,YAAae,EAAIX,KAAOI,IAFlD,SAIE,cAAC,IAAD,CAAMV,GAAE,gBAAWiB,EAAIX,IAAvB,SAA8BW,EAAIV,iBAM1C,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGa,EACCA,EAAYJ,QAEZ,4BC1CGW,EAAe,WAC1B,OACE,oBAAIpB,UAAU,QAAd,6BCCSqB,EAAmB,WAC9B,IAAMC,EAAWC,cAMjB,OAJAR,qBAAU,WACRO,EAAS,qBACR,IAEI,MCPIE,EAAmB,WAC9B,IAAMF,EAAWC,cAMjB,OAJAR,qBAAU,WACRO,EAAS,OACR,IAEI,MCDHG,EAASC,YAAiB,CAAC,CAC/BC,KAAM,IACNC,QAAS,cAAC,EAAD,IACTC,aAAc,cAAC,EAAD,IACdC,SAAU,CAAC,CACTH,KAAM,IACNC,QAAS,cAAC,EAAD,KAEX,CACED,KAAM,QACNC,QAAS,cAAC,EAAD,KAEX,CACED,KAAM,QACNC,QAAS,cAAC,EAAD,KAEX,CACED,KAAM,eACNC,QAAS,cAAC,EAAD,KAEX,CACED,KAAM,kBACNC,QAAS,cAAC,EAAD,SAKAG,EAAiB,WAC5B,OACE,cAAC,IAAD,CAAgBN,OAAQA,KCnC5BO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f618825a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const App = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'is-active': isActive },\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const Home = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\nexport const Tabs = () => {\n  const tabs = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  const { tabId = 0 } = useParams();\n  const [selectedTab, setSelectedTab] = useState<Tab | null>(null);\n\n  useEffect(() => {\n    const selected = tabs.find(tab => tab.id === tabId);\n\n    setSelectedTab(selected || null);\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': tab.id === tabId })}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? (\n          selectedTab.content\n        ) : (\n          'Please select a tab'\n        )}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const NotFoundRedirect = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/page-not-found');\n  }, []);\n\n  return null;\n};\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const HomePageRedirect = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/');\n  }, []);\n\n  return null;\n};\n","import { RouterProvider, createHashRouter } from 'react-router-dom';\nimport { FC } from 'react';\nimport { App } from './App';\nimport { Home } from './Components/Home';\nimport { Tabs } from './Components/Tabs';\nimport { NotFoundPage } from './Components/NotFoundPage';\nimport { NotFoundRedirect } from './Components/NotFoundRedirect';\nimport { HomePageRedirect } from './Components/HomePageRedirect';\n\nconst router = createHashRouter([{\n  path: '/',\n  element: <App />,\n  errorElement: <NotFoundRedirect />,\n  children: [{\n    path: '/',\n    element: <Home />,\n  },\n  {\n    path: '/home',\n    element: <HomePageRedirect />,\n  },\n  {\n    path: '/tabs',\n    element: <Tabs />,\n  },\n  {\n    path: '/tabs/:tabId',\n    element: <Tabs />,\n  },\n  {\n    path: '/page-not-found',\n    element: <NotFoundPage />,\n  },\n  ],\n}]);\n\nexport const AppRouting: FC = () => {\n  return (\n    <RouterProvider router={router} />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { AppRouting } from './AppRouting';\n\nReactDOM.render(\n  <AppRouting />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}